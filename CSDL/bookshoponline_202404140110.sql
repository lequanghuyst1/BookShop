--
-- Script was generated by Devart dbForge Studio 2020 for MySQL, Version 9.0.338.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 4/14/2024 1:10:01 AM
-- Server version: 10.5.22
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

--
-- Set default database
--
USE bookshoponline;

--
-- Drop procedure `Proc_Role_GetByRoleName`
--
DROP PROCEDURE IF EXISTS Proc_Role_GetByRoleName;

--
-- Drop procedure `Proc_User_CheckUserIsExist`
--
DROP PROCEDURE IF EXISTS Proc_User_CheckUserIsExist;

--
-- Drop procedure `Proc_User_Insert`
--
DROP PROCEDURE IF EXISTS Proc_User_Insert;

--
-- Drop procedure `Proc_User_Update`
--
DROP PROCEDURE IF EXISTS Proc_User_Update;

--
-- Drop procedure `Proc_Book_Insert`
--
DROP PROCEDURE IF EXISTS Proc_Book_Insert;

--
-- Drop procedure `Proc_Book_Update`
--
DROP PROCEDURE IF EXISTS Proc_Book_Update;

--
-- Drop procedure `Proc_Category_Insert`
--
DROP PROCEDURE IF EXISTS Proc_Category_Insert;

--
-- Drop procedure `Proc_Category_Update`
--
DROP PROCEDURE IF EXISTS Proc_Category_Update;

--
-- Drop procedure `Proc_Publisher_Insert`
--
DROP PROCEDURE IF EXISTS Proc_Publisher_Insert;

--
-- Drop procedure `Proc_Publisher_Update`
--
DROP PROCEDURE IF EXISTS Proc_Publisher_Update;

--
-- Drop function `GenerateSlugFromEntityName`
--
DROP FUNCTION IF EXISTS GenerateSlugFromEntityName;

--
-- Drop view `view_orderdetail`
--
DROP VIEW IF EXISTS view_orderdetail CASCADE;

--
-- Drop procedure `Proc_OrderDetail_Insert`
--
DROP PROCEDURE IF EXISTS Proc_OrderDetail_Insert;

--
-- Drop table `orderdetail`
--
DROP TABLE IF EXISTS orderdetail;

--
-- Drop procedure `Proc_Order_GetByUserId`
--
DROP PROCEDURE IF EXISTS Proc_Order_GetByUserId;

--
-- Drop view `view_order`
--
DROP VIEW IF EXISTS view_order CASCADE;

--
-- Drop procedure `Proc_Order_Insert`
--
DROP PROCEDURE IF EXISTS Proc_Order_Insert;

--
-- Drop procedure `Proc_Order_Update`
--
DROP PROCEDURE IF EXISTS Proc_Order_Update;

--
-- Drop table `order`
--
DROP TABLE IF EXISTS `order`;

--
-- Drop procedure `Proc_CartItem_GetByCartId`
--
DROP PROCEDURE IF EXISTS Proc_CartItem_GetByCartId;

--
-- Drop view `view_cartitem`
--
DROP VIEW IF EXISTS view_cartitem CASCADE;

--
-- Drop procedure `Proc_Book_FilterPaging`
--
DROP PROCEDURE IF EXISTS Proc_Book_FilterPaging;

--
-- Drop procedure `Proc_Book_GetById`
--
DROP PROCEDURE IF EXISTS Proc_Book_GetById;

--
-- Drop view `view_book`
--
DROP VIEW IF EXISTS view_book CASCADE;

--
-- Drop view `view_image`
--
DROP VIEW IF EXISTS view_image CASCADE;

--
-- Drop procedure `Proc_Image_Delete`
--
DROP PROCEDURE IF EXISTS Proc_Image_Delete;

--
-- Drop procedure `Proc_Image_GetByTableId`
--
DROP PROCEDURE IF EXISTS Proc_Image_GetByTableId;

--
-- Drop procedure `Proc_Image_Insert`
--
DROP PROCEDURE IF EXISTS Proc_Image_Insert;

--
-- Drop procedure `Proc_Image_Update`
--
DROP PROCEDURE IF EXISTS Proc_Image_Update;

--
-- Drop table `image`
--
DROP TABLE IF EXISTS image;

--
-- Drop procedure `Proc_CartItem_CheckBookExist`
--
DROP PROCEDURE IF EXISTS Proc_CartItem_CheckBookExist;

--
-- Drop procedure `Proc_CartItem_Insert`
--
DROP PROCEDURE IF EXISTS Proc_CartItem_Insert;

--
-- Drop procedure `Proc_CartItem_Update`
--
DROP PROCEDURE IF EXISTS Proc_CartItem_Update;

--
-- Drop table `cartitem`
--
DROP TABLE IF EXISTS cartitem;

--
-- Drop table `book`
--
DROP TABLE IF EXISTS book;

--
-- Drop view `view_category`
--
DROP VIEW IF EXISTS view_category CASCADE;

--
-- Drop procedure `Proc_Category_FilterPaging`
--
DROP PROCEDURE IF EXISTS Proc_Category_FilterPaging;

--
-- Drop table `category`
--
DROP TABLE IF EXISTS category;

--
-- Drop procedure `Proc_Publisher_FilterPaging`
--
DROP PROCEDURE IF EXISTS Proc_Publisher_FilterPaging;

--
-- Drop view `view_publisher`
--
DROP VIEW IF EXISTS view_publisher CASCADE;

--
-- Drop table `publisher`
--
DROP TABLE IF EXISTS publisher;

--
-- Drop procedure `Proc_User_FindUserByEmailAndPassword`
--
DROP PROCEDURE IF EXISTS Proc_User_FindUserByEmailAndPassword;

--
-- Drop view `view_user`
--
DROP VIEW IF EXISTS view_user CASCADE;

--
-- Drop procedure `Proc_Cart_Insert`
--
DROP PROCEDURE IF EXISTS Proc_Cart_Insert;

--
-- Drop table `cart`
--
DROP TABLE IF EXISTS cart;

--
-- Drop procedure `Proc_DeliveryAddress_GetByUserId`
--
DROP PROCEDURE IF EXISTS Proc_DeliveryAddress_GetByUserId;

--
-- Drop view `view_deliveryaddress`
--
DROP VIEW IF EXISTS view_deliveryaddress CASCADE;

--
-- Drop procedure `Proc_DeliveryAddress_Insert`
--
DROP PROCEDURE IF EXISTS Proc_DeliveryAddress_Insert;

--
-- Drop procedure `Proc_DeliveryAddress_RemoveDefault`
--
DROP PROCEDURE IF EXISTS Proc_DeliveryAddress_RemoveDefault;

--
-- Drop procedure `Proc_DeliveryAddress_SetDefault`
--
DROP PROCEDURE IF EXISTS Proc_DeliveryAddress_SetDefault;

--
-- Drop procedure `Proc_DeliveryAddress_Update`
--
DROP PROCEDURE IF EXISTS Proc_DeliveryAddress_Update;

--
-- Drop table `deliveryaddress`
--
DROP TABLE IF EXISTS deliveryaddress;

--
-- Drop table `user`
--
DROP TABLE IF EXISTS user;

--
-- Drop table `role`
--
DROP TABLE IF EXISTS role;

--
-- Set default database
--
USE bookshoponline;

--
-- Create table `role`
--
CREATE TABLE role (
  RoleId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định dang quyền',
  RoleName varchar(100) NOT NULL DEFAULT '' COMMENT 'Tên quyền',
  PRIMARY KEY (RoleId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8,
COLLATE utf8_general_ci,
COMMENT = 'quyền';

--
-- Create index `UK_role_RoleName` on table `role`
--
ALTER TABLE role
ADD UNIQUE INDEX UK_role_RoleName (RoleName);

--
-- Create table `user`
--
CREATE TABLE user (
  UserId char(36) NOT NULL DEFAULT '' COMMENT 'mã định danh người dùng',
  Fullname varchar(100) NOT NULL DEFAULT '' COMMENT 'Họ và tên người dùng',
  Address varchar(255) DEFAULT NULL COMMENT 'Địa chỉ',
  Gender int(11) DEFAULT NULL COMMENT 'Giới tính',
  Password varchar(50) NOT NULL DEFAULT '' COMMENT 'Mật khẩu',
  Email varchar(255) NOT NULL DEFAULT '' COMMENT 'Email',
  PhoneNumber varchar(50) DEFAULT NULL COMMENT 'Số điện thoại',
  DateOfBirth varchar(255) DEFAULT NULL COMMENT 'Ngày sinh',
  QuantityAmountPurched double DEFAULT NULL COMMENT 'Tổng sổ tiền đã mua sắm',
  RoleId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định dang quyền người dùng',
  RefreshToken varchar(255) DEFAULT NULL COMMENT 'Chuỗi để làm mới token',
  RefreshTokenExpiryTime datetime DEFAULT NULL COMMENT 'Hạn thời gian để làm mới token',
  CreatedDate datetime DEFAULT NULL COMMENT 'Ngày tạo',
  CreatedBy char(36) DEFAULT NULL COMMENT 'Người tạo',
  ModifiedDate datetime DEFAULT NULL COMMENT 'Ngày sửa',
  ModifiedBy varchar(100) DEFAULT NULL COMMENT 'Người sửa',
  PRIMARY KEY (UserId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8,
COLLATE utf8_general_ci,
COMMENT = 'bảng người dùng';

--
-- Create index `IDX_user_Fullname` on table `user`
--
ALTER TABLE user
ADD INDEX IDX_user_Fullname (Fullname);

--
-- Create index `IDX_user_PhoneNumber` on table `user`
--
ALTER TABLE user
ADD INDEX IDX_user_PhoneNumber (PhoneNumber);

--
-- Create index `UK_user_Email` on table `user`
--
ALTER TABLE user
ADD UNIQUE INDEX UK_user_Email (Email);

--
-- Create foreign key
--
ALTER TABLE user
ADD CONSTRAINT FK_user_RoleId FOREIGN KEY (RoleId)
REFERENCES role (RoleId) ON DELETE NO ACTION;

--
-- Create table `deliveryaddress`
--
CREATE TABLE deliveryaddress (
  DeliveryAddressId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định danh nơi nhận hàng',
  UserId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định danh người dùng',
  Province varchar(255) DEFAULT NULL COMMENT 'Tỉnh/thành phố',
  District varchar(255) DEFAULT NULL COMMENT 'Quận/Huyện',
  Ward varchar(255) DEFAULT NULL COMMENT 'Phường/xã',
  HomeNumber varchar(255) DEFAULT NULL COMMENT 'Số nhà/ tên đường',
  DeliveryAddressName varchar(255) DEFAULT '' COMMENT 'Tên địa chỉ nhận hàng',
  DeliveryAddressDefault tinyint(1) DEFAULT NULL COMMENT 'Đặt làm địa chỉ mặc định (true-mặc đinh, flase-không mặc định)',
  ReminiscentName varchar(100) NOT NULL DEFAULT '' COMMENT 'Họ và tên người nhận',
  PhoneNumber varchar(50) NOT NULL DEFAULT '' COMMENT 'Số điện thoại người nhận',
  CreatedDate datetime DEFAULT NULL COMMENT 'Ngày tạo',
  CreatedBy varchar(100) DEFAULT NULL COMMENT 'Người tạo',
  ModifiedDate datetime DEFAULT NULL COMMENT 'Ngày chỉnh sửa',
  ModifiedBy varchar(100) DEFAULT NULL COMMENT 'Người chỉnh sửa',
  PRIMARY KEY (DeliveryAddressId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8,
COLLATE utf8_general_ci,
COMMENT = 'Địa chỉ nhận hàng';

--
-- Create index `IDX_deliveryaddress_PhoneNumber` on table `deliveryaddress`
--
ALTER TABLE deliveryaddress
ADD INDEX IDX_deliveryaddress_PhoneNumber (PhoneNumber);

--
-- Create foreign key
--
ALTER TABLE deliveryaddress
ADD CONSTRAINT FK_deliveryaddress_UserId FOREIGN KEY (UserId)
REFERENCES user (UserId) ON DELETE CASCADE;

DELIMITER $$

--
-- Create procedure `Proc_DeliveryAddress_Update`
--
CREATE PROCEDURE Proc_DeliveryAddress_Update (IN DeliveryAddressId char(36), IN UserId char(36), IN Province varchar(255), IN District varchar(255), IN Ward varchar(255), IN HomeNumber varchar(255), IN DeliveryAddressName varchar(255), IN DeliveryAddressDefault tinyint, IN ReminiscentName varchar(100), IN PhoneNumber varchar(50), IN ModifiedDate datetime, IN ModifiedBy varchar(100))
SQL SECURITY INVOKER
BEGIN
  UPDATE deliveryaddress d
  SET d.Province = Province,
      d.District = District,
      d.Ward = Ward,
      d.HomeNumber = HomeNumber,
      d.DeliveryAddressName = DeliveryAddressName,
      d.DeliveryAddressDefault = DeliveryAddressDefault,
      d.ReminiscentName = ReminiscentName,
      d.PhoneNumber = PhoneNumber,
      d.ModifiedDate = CURRENT_TIMESTAMP(),
      d.ModifiedBy = ModifiedBy
  WHERE d.DeliveryAddressId = DeliveryAddressId;
END
$$

--
-- Create procedure `Proc_DeliveryAddress_SetDefault`
--
CREATE PROCEDURE Proc_DeliveryAddress_SetDefault (IN DeliveryAddressId char(36))
SQL SECURITY INVOKER
BEGIN
  UPDATE deliveryaddress d
  SET DeliveryAddressDefault = 0;
  UPDATE deliveryaddress d
  SET DeliveryAddressDefault = 1
  WHERE d.DeliveryAddressId = DeliveryAddressId;
END
$$

--
-- Create procedure `Proc_DeliveryAddress_RemoveDefault`
--
CREATE PROCEDURE Proc_DeliveryAddress_RemoveDefault ()
SQL SECURITY INVOKER
BEGIN
  UPDATE deliveryaddress d
  SET DeliveryAddressDefault = 0;

END
$$

--
-- Create procedure `Proc_DeliveryAddress_Insert`
--
CREATE PROCEDURE Proc_DeliveryAddress_Insert (IN DeliveryAddressId char(36), IN UserId char(36), IN DeliveryAddressName varchar(255), IN PhoneNumber varchar(50), IN ReminiscentName varchar(100), IN DeliveryAddressDefault tinyint, IN CreatedDate datetime, IN CreatedBy varchar(100), IN Province varchar(255), IN District varchar(255), IN Ward varchar(255), IN HomeNumber varchar(255))
SQL SECURITY INVOKER
BEGIN
  INSERT deliveryaddress (DeliveryAddressId, UserId, Province, District, Ward, HomeNumber, DeliveryAddressName, DeliveryAddressDefault, ReminiscentName, PhoneNumber, CreatedDate, CreatedBy)
    VALUES (DeliveryAddressId, UserId, Province, District, Ward, HomeNumber, DeliveryAddressName, DeliveryAddressDefault, ReminiscentName, PhoneNumber, CURRENT_TIMESTAMP(), CreatedBy);
END
$$

DELIMITER ;

--
-- Create view `view_deliveryaddress`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_deliveryaddress
AS
SELECT
  `d`.`DeliveryAddressId` AS `DeliveryAddressId`,
  `d`.`UserId` AS `UserId`,
  `d`.`Province` AS `Province`,
  `d`.`District` AS `District`,
  `d`.`Ward` AS `Ward`,
  `d`.`HomeNumber` AS `HomeNumber`,
  `d`.`DeliveryAddressName` AS `DeliveryAddressName`,
  `d`.`DeliveryAddressDefault` AS `DeliveryAddressDefault`,
  `d`.`ReminiscentName` AS `ReminiscentName`,
  `d`.`PhoneNumber` AS `PhoneNumber`,
  `d`.`CreatedDate` AS `CreatedDate`,
  `d`.`CreatedBy` AS `CreatedBy`,
  `d`.`ModifiedDate` AS `ModifiedDate`,
  `d`.`ModifiedBy` AS `ModifiedBy`
FROM `deliveryaddress` `d`
ORDER BY `d`.`CreatedDate` DESC;

DELIMITER $$

--
-- Create procedure `Proc_DeliveryAddress_GetByUserId`
--
CREATE PROCEDURE Proc_DeliveryAddress_GetByUserId (IN UserId char(36))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM view_deliveryaddress vd
  WHERE vd.UserId = UserId;
END
$$

DELIMITER ;

--
-- Create table `cart`
--
CREATE TABLE cart (
  CartId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định danh giỏ hàng',
  UserId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định danh người dùng',
  CreatedDate datetime DEFAULT NULL COMMENT 'Ngày tạo',
  CreatedBy varchar(100) DEFAULT NULL COMMENT 'Người tạo',
  ModifiedDate datetime DEFAULT NULL COMMENT 'Ngày sửa',
  ModifiedBy varchar(100) DEFAULT NULL COMMENT 'Người sửa',
  PRIMARY KEY (CartId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

--
-- Create foreign key
--
ALTER TABLE cart
ADD CONSTRAINT FK_cart_UserId FOREIGN KEY (UserId)
REFERENCES user (UserId) ON DELETE CASCADE;

DELIMITER $$

--
-- Create procedure `Proc_Cart_Insert`
--
CREATE PROCEDURE Proc_Cart_Insert (IN CartId char(36), IN UserId char(36), IN CreatedBy varchar(100))
SQL SECURITY INVOKER
BEGIN
  INSERT cart (CartId, UserId, CreatedDate, CreatedBy)
    VALUES (UUID(), UserId, CURRENT_TIMESTAMP(), CreatedBy);
END
$$

DELIMITER ;

--
-- Create view `view_user`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_user
AS
SELECT
  `u`.`UserId` AS `UserId`,
  `u`.`Fullname` AS `Fullname`,
  `u`.`Address` AS `Address`,
  `u`.`Gender` AS `Gender`,
  `u`.`Password` AS `Password`,
  `u`.`Email` AS `Email`,
  `u`.`PhoneNumber` AS `PhoneNumber`,
  `u`.`DateOfBirth` AS `DateOfBirth`,
  `u`.`QuantityAmountPurched` AS `QuantityAmountPurched`,
  `u`.`RoleId` AS `RoleId`,
  `u`.`RefreshToken` AS `RefreshToken`,
  `u`.`RefreshTokenExpiryTime` AS `RefreshTokenExpiryTime`,
  `u`.`CreatedDate` AS `CreatedDate`,
  `u`.`CreatedBy` AS `CreatedBy`,
  `u`.`ModifiedDate` AS `ModifiedDate`,
  `u`.`ModifiedBy` AS `ModifiedBy`,
  `r`.`RoleName` AS `RoleName`,
  `c`.`CartId` AS `CartId`
FROM ((`user` `u`
  LEFT JOIN `role` `r`
    ON (`u`.`RoleId` = `r`.`RoleId`))
  LEFT JOIN `cart` `c`
    ON (`u`.`UserId` = `c`.`UserId`))
ORDER BY `c`.`CreatedDate` DESC;

DELIMITER $$

--
-- Create procedure `Proc_User_FindUserByEmailAndPassword`
--
CREATE PROCEDURE Proc_User_FindUserByEmailAndPassword (IN Email varchar(255), IN Password varchar(50))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM view_user vu
  WHERE vu.Email = Email
  AND vu.Password = MD5(Password);
END
$$

DELIMITER ;

--
-- Create table `publisher`
--
CREATE TABLE publisher (
  PublisherId char(36) NOT NULL DEFAULT '' COMMENT 'ngày tạo',
  PublisherName varchar(100) NOT NULL DEFAULT '' COMMENT 'tên nhà xuất bản',
  PublisherSlug varchar(255) DEFAULT NULL,
  Description text DEFAULT NULL,
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(100) DEFAULT NULL COMMENT 'Người tạo',
  ModifiedDate datetime DEFAULT NULL COMMENT 'ngày sửa',
  ModifiedBy varchar(100) DEFAULT NULL COMMENT 'người sửa',
  PublisherCode varchar(50) DEFAULT NULL,
  PhoneNumber varchar(255) DEFAULT NULL,
  Address varchar(255) DEFAULT NULL,
  PRIMARY KEY (PublisherId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 2184,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

--
-- Create view `view_publisher`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_publisher
AS
SELECT
  `p`.`PublisherId` AS `PublisherId`,
  `p`.`PublisherName` AS `PublisherName`,
  `p`.`PublisherSlug` AS `PublisherSlug`,
  `p`.`Description` AS `Description`,
  `p`.`CreatedDate` AS `CreatedDate`,
  `p`.`CreatedBy` AS `CreatedBy`,
  `p`.`ModifiedDate` AS `ModifiedDate`,
  `p`.`ModifiedBy` AS `ModifiedBy`,
  `p`.`PublisherCode` AS `PublisherCode`,
  `p`.`PhoneNumber` AS `PhoneNumber`,
  `p`.`Address` AS `Address`
FROM `publisher` `p`
ORDER BY `p`.`CreatedDate` DESC;

DELIMITER $$

--
-- Create procedure `Proc_Publisher_FilterPaging`
--
CREATE PROCEDURE Proc_Publisher_FilterPaging (IN pageNumber int, IN pageSize int, IN searchString varchar(255), OUT totalRecord int, OUT totalPage int)
SQL SECURITY INVOKER
BEGIN
  DECLARE start_index int;
  SET start_index = (pageNumber - 1) * pageSize;

  -- Lấy ra số lượng bản ghi thỏa mãn điều kiện
  SELECT
    *
  FROM view_publisher vp
  WHERE searchString IS NULL
  OR vp.PublisherName LIKE CONCAT('%', searchString, '%')
  OR vp.PhoneNumber LIKE CONCAT('%', searchString, '%')
  ORDER BY vp.CreatedDate DESC
  LIMIT pageSize OFFSET start_index;

  -- Đếm số lượng bản ghi thỏa mãn điều kiện và lưu kết quả vào biến totalRecord.
  SET totalRecord = (SELECT
      COUNT(*)
    FROM view_publisher vp
    WHERE searchString IS NULL
    OR vp.PublisherName LIKE CONCAT('%', searchString, '%')
    OR vp.PhoneNumber LIKE CONCAT('%', searchString, '%'));

  -- tổng sổ trang thỏa mãn điều kiện
  SET totalPage = CEIL(totalRecord / pageSize);
END
$$

DELIMITER ;

--
-- Create table `category`
--
CREATE TABLE category (
  CategoryId char(36) NOT NULL DEFAULT '' COMMENT 'mã định danh danh mục',
  CategorySlug varchar(255) DEFAULT NULL,
  CategoryName varchar(100) NOT NULL DEFAULT '' COMMENT 'tên danh mục',
  Description text DEFAULT NULL COMMENT 'mô tả',
  CreatedDate datetime DEFAULT NULL COMMENT 'ngày tạo',
  CreatedBy varchar(100) DEFAULT NULL COMMENT 'người tạo',
  ModifiedDate datetime DEFAULT NULL COMMENT 'ngày sửa',
  ModifiedBy varchar(100) DEFAULT NULL COMMENT 'Người sửa',
  CategoryCode varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (CategoryId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 1638,
CHARACTER SET utf8,
COLLATE utf8_general_ci,
COMMENT = 'danh mục sách';

DELIMITER $$

--
-- Create procedure `Proc_Category_FilterPaging`
--
CREATE PROCEDURE Proc_Category_FilterPaging (IN pageSize int, IN pageNumber int, OUT totalPage int, OUT totalRecord int, IN searchString varchar(255))
SQL SECURITY INVOKER
BEGIN
  DECLARE start_index int;
  SET start_index = (pageNumber - 1) * pageSize;

  -- Lấy ra số lượng bản ghi thỏa mãn điều kiện
  SELECT
    *
  FROM category c
  WHERE searchString IS NULL
  OR c.CategoryName LIKE CONCAT('%', searchString, '%')
  OR c.CategoryCode LIKE CONCAT('%', searchString, '%')
  ORDER BY c.CreatedDate DESC
  LIMIT pageSize OFFSET start_index;

  -- Đếm số lượng bản ghi thỏa mãn điều kiện và lưu kết quả vào biến totalRecord.
  SET totalRecord = (SELECT
      COUNT(*)
    FROM category c
    WHERE searchString IS NULL
    OR c.CategoryName LIKE CONCAT('%', searchString, '%')
    OR c.CategoryCode LIKE CONCAT('%', searchString, '%')
    ORDER BY c.CreatedDate DESC);

  -- tổng sổ trang thỏa mãn điều kiện
  SET totalPage = CEIL(totalRecord / pageSize);
END
$$

DELIMITER ;

--
-- Create view `view_category`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_category
AS
SELECT
  `c`.`CategoryId` AS `CategoryId`,
  `c`.`CategoryName` AS `CategoryName`,
  `c`.`CategorySlug` AS `CategorySlug`,
  `c`.`Description` AS `Description`,
  `c`.`CreatedDate` AS `CreatedDate`,
  `c`.`CreatedBy` AS `CreatedBy`,
  `c`.`ModifiedDate` AS `ModifiedDate`,
  `c`.`ModifiedBy` AS `ModifiedBy`,
  `c`.`CategoryCode` AS `CategoryCode`
FROM `category` `c`
ORDER BY `c`.`CreatedDate`;

--
-- Create table `book`
--
CREATE TABLE book (
  BookId char(36) NOT NULL DEFAULT '' COMMENT 'mã định danh của sách',
  BookCode varchar(255) NOT NULL COMMENT 'mã sách',
  BookName varchar(255) NOT NULL DEFAULT '' COMMENT 'Tên sách',
  Description varchar(255) DEFAULT NULL COMMENT 'mô tả',
  Price double NOT NULL COMMENT 'giá',
  PublicationDate date DEFAULT NULL COMMENT 'ngày phát hành',
  Size varchar(255) DEFAULT NULL COMMENT 'kích thước',
  NumberOfPage int(11) DEFAULT NULL COMMENT 'số trang',
  Heavy double DEFAULT NULL COMMENT 'khối lượng',
  Image varchar(255) DEFAULT NULL COMMENT 'hình ảnh',
  CategoryId char(36) NOT NULL DEFAULT '' COMMENT 'mã định danh danh mục',
  PublisherId char(36) NOT NULL DEFAULT '' COMMENT 'mã định danh nhà xuất bản',
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(100) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(100) DEFAULT NULL,
  Author varchar(100) DEFAULT NULL COMMENT 'tác giả',
  QuantityInStock int(11) DEFAULT NULL COMMENT 'Số lượng tồn trong kho',
  QuantitySold int(11) DEFAULT NULL COMMENT 'Số lượng đã bán',
  QuantityImported int(11) DEFAULT NULL COMMENT 'Số lượng nhập',
  BookSlug varchar(255) DEFAULT NULL,
  PRIMARY KEY (BookId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8,
COLLATE utf8_general_ci,
COMMENT = 'sách';

--
-- Create index `UK_book_BookCode` on table `book`
--
ALTER TABLE book
ADD UNIQUE INDEX UK_book_BookCode (BookCode);

--
-- Create foreign key
--
ALTER TABLE book
ADD CONSTRAINT FK_book_category FOREIGN KEY (CategoryId)
REFERENCES category (CategoryId) ON DELETE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE book
ADD CONSTRAINT FK_book_publisher FOREIGN KEY (PublisherId)
REFERENCES publisher (PublisherId) ON DELETE NO ACTION;

--
-- Create table `cartitem`
--
CREATE TABLE cartitem (
  CartItemId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định danh cartitem',
  CartId char(36) NOT NULL DEFAULT '' COMMENT 'mã định danh giỏ hàng',
  BookId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định danh sách',
  Quantity int(11) DEFAULT NULL COMMENT 'tổng số lượng mỗi sản phẩm',
  UnitPrice double DEFAULT NULL COMMENT 'giá trị thực của mỗi sản phẩm',
  ProvisionalMoney double DEFAULT NULL COMMENT 'Tiền tạm tính của mỗi sản phẩm',
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(100) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(100) DEFAULT NULL,
  PRIMARY KEY (CartItemId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

--
-- Create foreign key
--
ALTER TABLE cartitem
ADD CONSTRAINT FK_cartitem_BookId FOREIGN KEY (BookId)
REFERENCES book (BookId) ON DELETE CASCADE;

--
-- Create foreign key
--
ALTER TABLE cartitem
ADD CONSTRAINT FK_cartitem_CartId FOREIGN KEY (CartId)
REFERENCES cart (CartId) ON DELETE CASCADE;

DELIMITER $$

--
-- Create procedure `Proc_CartItem_Update`
--
CREATE PROCEDURE Proc_CartItem_Update (IN CartItemId char(36), IN CartId char(36), IN BookId char(36), IN Quantity int, IN ProvisionalMoney double, IN ModifiedBy varchar(100), IN UnitPrice double)
SQL SECURITY INVOKER
BEGIN
  UPDATE cartitem c
  SET c.Quantity = Quantity,
      c.UnitPrice = UnitPrice,
      c.ProvisionalMoney = c.UnitPrice * c.Quantity,
      c.ModifiedDate = CURRENT_TIMESTAMP(),
      c.ModifiedBy = ModifiedBy
  WHERE c.BookId = BookId;
END
$$

--
-- Create procedure `Proc_CartItem_Insert`
--
CREATE PROCEDURE Proc_CartItem_Insert (IN CartItemId char(36), IN CartId char(36), IN BookId char(36), IN ProvisionalMoney double, IN Quantity int, IN CreatedBy varchar(100), IN UnitPrice double)
SQL SECURITY INVOKER
BEGIN
  INSERT cartitem (CartItemId, CartId, BookId, Quantity, UnitPrice, ProvisionalMoney, CreatedDate, CreatedBy)
    VALUES (CartItemId, CartId, BookId, Quantity, UnitPrice, ProvisionalMoney, CURRENT_TIMESTAMP(), CreatedBy);
END
$$

--
-- Create procedure `Proc_CartItem_CheckBookExist`
--
CREATE PROCEDURE Proc_CartItem_CheckBookExist (IN BookId char(36))
SQL SECURITY INVOKER
BEGIN
  SELECT
    c.CartItemId,
    c.CartId,
    c.BookId,
    c.Quantity,
    c.ProvisionalMoney,
    c.CreatedDate,
    c.CreatedBy,
    c.ModifiedDate,
    c.ModifiedBy
  FROM cartitem c
  WHERE c.BookId = BookId;
END
$$

DELIMITER ;

--
-- Create table `image`
--
CREATE TABLE image (
  ImageId char(36) NOT NULL DEFAULT '',
  ImagePath varchar(255) DEFAULT NULL,
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(100) DEFAULT NULL,
  BookId char(36) DEFAULT '',
  PublisherId char(36) DEFAULT '',
  ModifiedBy varchar(100) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  CategoryId char(36) DEFAULT NULL,
  PRIMARY KEY (ImageId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 1170,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

DELIMITER $$

--
-- Create procedure `Proc_Image_Update`
--
CREATE PROCEDURE Proc_Image_Update (IN ImagePath varchar(255), IN ModifiedBy varchar(100), IN TableId char(46))
SQL SECURITY INVOKER
BEGIN
  UPDATE Image i
  SET i.ImagePath = ImagePath,
      i.ModifiedBy = ModifiedBy,
      i.ModifiedDate = CURRENT_TIMESTAMP()
  WHERE i.BookId = TableId
  OR i.PublisherId = TableId
  OR i.CategoryId = TableId;
END
$$

--
-- Create procedure `Proc_Image_Insert`
--
CREATE PROCEDURE Proc_Image_Insert (IN ImagePath varchar(255), IN BookId char(36), IN PublisherId char(36), IN CategoryId char(36), IN CreatedDate datetime, IN CreatedBy varchar(100))
SQL SECURITY INVOKER
BEGIN
  INSERT Image (ImageId, ImagePath, CreatedDate, CreatedBy, BookId, PublisherId, CategoryId)
    VALUES (UUID(), ImagePath, CURRENT_TIMESTAMP(), CreatedBy, BookId, PublisherId, CategoryId);
END
$$

--
-- Create procedure `Proc_Image_GetByTableId`
--
CREATE PROCEDURE Proc_Image_GetByTableId (IN TableId varchar(255))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM image i
  WHERE i.CategoryId = TableId
  OR i.BookId = TableId
  OR i.PublisherId = TableId;
END
$$

--
-- Create procedure `Proc_Image_Delete`
--
CREATE PROCEDURE Proc_Image_Delete (IN TableId char(36))
SQL SECURITY INVOKER
BEGIN
  DELETE
    FROM image
  WHERE PublisherId = TableId
    OR BookId = TableId
    OR CategoryId = TableId;
END
$$

DELIMITER ;

--
-- Create view `view_image`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_image
AS
SELECT
  `i`.`ImageId` AS `ImageId`,
  `i`.`ImagePath` AS `ImagePath`,
  `i`.`CreatedDate` AS `CreatedDate`,
  `i`.`CreatedBy` AS `CreatedBy`,
  `i`.`BookId` AS `BookId`,
  `i`.`PublisherId` AS `PublisherId`,
  `i`.`ModifiedBy` AS `ModifiedBy`,
  `i`.`ModifiedDate` AS `ModifiedDate`,
  `i`.`CategoryId` AS `CategoryId`
FROM `image` `i`;

--
-- Create view `view_book`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_book
AS
SELECT
  `b`.`BookId` AS `BookId`,
  `b`.`BookCode` AS `BookCode`,
  `b`.`BookName` AS `BookName`,
  `b`.`Description` AS `Description`,
  `b`.`Price` AS `Price`,
  `b`.`BookSlug` AS `BookSlug`,
  `b`.`PublicationDate` AS `PublicationDate`,
  `b`.`Size` AS `Size`,
  `b`.`NumberOfPage` AS `NumberOfPage`,
  `b`.`Heavy` AS `Heavy`,
  `b`.`Image` AS `Image`,
  `b`.`CategoryId` AS `CategoryId`,
  `b`.`PublisherId` AS `PublisherId`,
  `b`.`CreatedDate` AS `CreatedDate`,
  `b`.`CreatedBy` AS `CreatedBy`,
  `b`.`ModifiedDate` AS `ModifiedDate`,
  `b`.`ModifiedBy` AS `ModifiedBy`,
  `b`.`Author` AS `Author`,
  `b`.`QuantityInStock` AS `QuantityInStock`,
  `b`.`QuantitySold` AS `QuantitySold`,
  `b`.`QuantityImported` AS `QuantityImported`,
  `c`.`CategoryName` AS `CategoryName`,
  `c`.`CategorySlug` AS `CategorySlug`,
  `p`.`PublisherName` AS `PublisherName`,
  `p`.`PublisherSlug` AS `PublisherSlug`,
  `i`.`ImagePath` AS `ImagePath`
FROM (((`book` `b`
  LEFT JOIN `category` `c`
    ON (`b`.`CategoryId` = `c`.`CategoryId`))
  LEFT JOIN `publisher` `p`
    ON (`b`.`PublisherId` = `p`.`PublisherId`))
  LEFT JOIN `image` `i`
    ON (`b`.`BookId` = `i`.`BookId`))
ORDER BY `b`.`CreatedDate` DESC;

DELIMITER $$

--
-- Create procedure `Proc_Book_GetById`
--
CREATE PROCEDURE Proc_Book_GetById (IN BookId char(36))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM view_book vb
  WHERE vb.BookId = BookId;
END
$$

--
-- Create procedure `Proc_Book_FilterPaging`
--
CREATE PROCEDURE Proc_Book_FilterPaging (IN pageNumber int, IN pageSize int, IN searchString varchar(255), OUT totalPage int, OUT totalRecord int)
SQL SECURITY INVOKER
BEGIN
  DECLARE start_index int;
  SET start_index = (pageNumber - 1) * pageSize;

  -- Lấy ra số lượng bản ghi thỏa mãn điều kiện
  SELECT
    *
  FROM view_book vb
  WHERE searchString IS NULL
  OR vb.BookName LIKE CONCAT('%', searchString, '%')
  OR vb.Author LIKE CONCAT('%', searchString, '%')
  ORDER BY vb.CreatedDate
  LIMIT pageSize OFFSET start_index;

  -- Đếm số lượng bản ghi thỏa mãn điều kiện và lưu kết quả vào biến totalRecord.
  SET totalRecord = (SELECT
      COUNT(*)
    FROM view_book vb
    WHERE searchString IS NULL
    OR vb.BookName LIKE CONCAT('%', searchString, '%')
    OR vb.Author LIKE CONCAT('%', searchString, '%'));

  -- tổng sổ trang thỏa mãn điều kiện
  SET totalPage = CEIL(totalRecord / pageSize);
END
$$

DELIMITER ;

--
-- Create view `view_cartitem`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_cartitem
AS
SELECT
  `vb`.`BookId` AS `BookId`,
  `vb`.`BookCode` AS `BookCode`,
  `vb`.`BookName` AS `BookName`,
  `vb`.`Description` AS `Description`,
  `vb`.`PublicationDate` AS `PublicationDate`,
  `vb`.`Price` AS `Price`,
  `vb`.`Size` AS `Size`,
  `vb`.`NumberOfPage` AS `NumberOfPage`,
  `vb`.`Heavy` AS `Heavy`,
  `vb`.`Image` AS `Image`,
  `vb`.`CategoryId` AS `CategoryId`,
  `vb`.`PublisherId` AS `PublisherId`,
  `vb`.`Author` AS `Author`,
  `vb`.`QuantityInStock` AS `QuantityInStock`,
  `vb`.`QuantitySold` AS `QuantitySold`,
  `vb`.`QuantityImported` AS `QuantityImported`,
  `vb`.`CategoryName` AS `CategoryName`,
  `vb`.`PublisherName` AS `PublisherName`,
  `vb`.`ImagePath` AS `ImagePath`,
  `c`.`CartItemId` AS `CartItemId`,
  `c`.`CartId` AS `CartId`,
  `c`.`Quantity` AS `Quantity`,
  `c`.`UnitPrice` AS `UnitPrice`,
  `c`.`ProvisionalMoney` AS `ProvisionalMoney`,
  `c`.`CreatedDate` AS `CreatedDate`,
  `c`.`CreatedBy` AS `CreatedBy`,
  `c`.`ModifiedDate` AS `ModifiedDate`,
  `c`.`ModifiedBy` AS `ModifiedBy`
FROM (`view_book` `vb`
  LEFT JOIN `cartitem` `c`
    ON (`vb`.`BookId` = `c`.`BookId`))
ORDER BY `c`.`CreatedDate` DESC;

DELIMITER $$

--
-- Create procedure `Proc_CartItem_GetByCartId`
--
CREATE PROCEDURE Proc_CartItem_GetByCartId (IN CartId varchar(255))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM view_cartitem vc
  WHERE vc.CartId = CartId
  ORDER BY vc.CreatedDate;
END
$$

DELIMITER ;

--
-- Create table `order`
--
CREATE TABLE `order` (
  OrderId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định danh đơn hàng',
  OrderCode varchar(50) NOT NULL DEFAULT '' COMMENT 'Mã đơn hàng',
  UserId char(36) NOT NULL DEFAULT '' COMMENT 'Mã định danh tài khoản',
  Fullname varchar(100) NOT NULL DEFAULT '' COMMENT 'Họ tên người nhận',
  PhoneNumber varchar(50) NOT NULL DEFAULT '' COMMENT 'Số điện thoại người nhận',
  TotalAmount double NOT NULL COMMENT 'Tổng tiền',
  Status varchar(255) NOT NULL DEFAULT '' COMMENT 'Trạng thái',
  Address varchar(255) NOT NULL DEFAULT '' COMMENT 'Địa chỉ giao hàng',
  DeliveryDate datetime DEFAULT NULL COMMENT 'Ngày nhận hàng',
  OrderDate datetime DEFAULT NULL COMMENT 'Ngày giao',
  Note varchar(255) DEFAULT NULL COMMENT 'Ghi chú',
  CancellationDate datetime DEFAULT NULL COMMENT 'Ngày hủy đơn hàng',
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(100) DEFAULT NULL,
  ModfiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(100) DEFAULT NULL,
  PRIMARY KEY (OrderId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

DELIMITER $$

--
-- Create procedure `Proc_Order_Update`
--
CREATE PROCEDURE Proc_Order_Update (IN OrderId char(36), IN UserId char(36), IN Fullname varchar(100), IN PhoneNumber varchar(50), IN TotalAmount int, IN Status varchar(255), IN Address varchar(255), IN Note varchar(255), IN ModifiedBy varchar(100), IN DeliveryDate datetime, IN CancellationDate datetime)
SQL SECURITY INVOKER
BEGIN
  UPDATE `order` o
  SET o.Fullname = Fullname,
      o.PhoneNumber = PhoneNumber,
      o.TotalAmount = TotalAmount,
      o.Status = Status,
      o.Address = Address,
      o.CancellationDate = CancellationDate,
      o.Note = Note,
      o.CancellationDate = CancellationDate,
      o.ModfiedDate = CURRENT_TIMESTAMP(),
      o.ModifiedBy = ModifiedBy
  WHERE o.OrderId = OrderId;
END
$$

--
-- Create procedure `Proc_Order_Insert`
--
CREATE PROCEDURE Proc_Order_Insert (IN OrderId char(36), IN Fullname varchar(100), IN PhoneNumber varchar(50), IN TotalAmount double, IN Status int, IN Address varchar(255), IN OrderDate datetime, IN Note varchar(255), IN CreatedDate datetime, IN CreatedBy varchar(100), IN OrderCode varchar(50), IN UserId char(36))
SQL SECURITY INVOKER
BEGIN
  INSERT `order` (OrderId, OrderCode, UserId, Fullname, PhoneNumber, TotalAmount, Status, Address, OrderDate, Note, CreatedDate, CreatedBy)
    VALUES (OrderId, OrderCode, UserId, Fullname, PhoneNumber, TotalAmount, Status, Address, CURRENT_TIMESTAMP(), Note, CURRENT_TIMESTAMP(), Fullname);
END
$$

DELIMITER ;

--
-- Create view `view_order`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_order
AS
SELECT
  `o`.`OrderId` AS `OrderId`,
  `o`.`OrderCode` AS `OrderCode`,
  `o`.`UserId` AS `UserId`,
  `o`.`Fullname` AS `Fullname`,
  `o`.`PhoneNumber` AS `PhoneNumber`,
  `o`.`TotalAmount` AS `TotalAmount`,
  `o`.`Status` AS `Status`,
  `o`.`Address` AS `Address`,
  `o`.`DeliveryDate` AS `DeliveryDate`,
  `o`.`OrderDate` AS `OrderDate`,
  `o`.`CancellationDate` AS `CancellationDate`,
  `o`.`Note` AS `Note`,
  `o`.`CreatedDate` AS `CreatedDate`,
  `o`.`CreatedBy` AS `CreatedBy`,
  `o`.`ModfiedDate` AS `ModfiedDate`,
  `o`.`ModifiedBy` AS `ModifiedBy`
FROM `order` `o`
ORDER BY `o`.`CreatedDate` DESC;

DELIMITER $$

--
-- Create procedure `Proc_Order_GetByUserId`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_Order_GetByUserId (IN UserId char(36))
BEGIN
  SELECT
    *
  FROM view_order vo;
END
$$

DELIMITER ;

--
-- Create table `orderdetail`
--
CREATE TABLE orderdetail (
  OrderDetailId char(36) NOT NULL DEFAULT '',
  BookId char(36) DEFAULT NULL,
  OrderId char(36) DEFAULT NULL,
  UnitPrice double DEFAULT NULL,
  Quantity int(11) DEFAULT NULL,
  CreatedBy varchar(100) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  CreatedDate datetime DEFAULT NULL,
  ModifiedBy varchar(100) DEFAULT NULL,
  PRIMARY KEY (OrderDetailId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

--
-- Create foreign key
--
ALTER TABLE orderdetail
ADD CONSTRAINT FK_orderdetail_OrderId FOREIGN KEY (OrderId)
REFERENCES `order` (OrderId) ON DELETE CASCADE;

DELIMITER $$

--
-- Create procedure `Proc_OrderDetail_Insert`
--
CREATE PROCEDURE Proc_OrderDetail_Insert (IN OrderDetailId char(36), IN BookId char(36), IN OrderId varchar(36), IN UnitPrice double, IN Quantity int, IN CreatedBy varchar(100), IN ModifiedDate datetime)
SQL SECURITY INVOKER
BEGIN
  INSERT orderdetail (OrderDetailId, BookId, OrderId, UnitPrice, Quantity, CreatedBy, CreatedDate)
    VALUES (UUID(), BookId, OrderId, UnitPrice, Quantity, CreatedBy, CURRENT_TIMESTAMP());
END
$$

DELIMITER ;

--
-- Create view `view_orderdetail`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_orderdetail
AS
SELECT
  `o`.`OrderDetailId` AS `OrderDetailId`,
  `o`.`OrderId` AS `OrderId`,
  `o`.`BookId` AS `BookId`,
  `o`.`Quantity` AS `Quantity`,
  `o`.`UnitPrice` AS `UnitPrice`,
  `o`.`CreatedBy` AS `CreatedBy`,
  `o`.`ModifiedDate` AS `ModifiedDate`,
  `o`.`CreatedDate` AS `CreatedDate`,
  `o`.`ModifiedBy` AS `ModifiedBy`,
  `b`.`BookCode` AS `BookCode`,
  `b`.`BookName` AS `BookName`,
  `b`.`Description` AS `Description`,
  `b`.`Price` AS `Price`,
  `b`.`PublicationDate` AS `PublicationDate`,
  `b`.`Size` AS `Size`,
  `b`.`NumberOfPage` AS `NumberOfPage`,
  `b`.`Heavy` AS `Heavy`,
  `b`.`CategoryId` AS `CategoryId`,
  `b`.`PublisherId` AS `PublisherId`,
  `b`.`Author` AS `Author`,
  `i`.`ImagePath` AS `ImagePath`
FROM ((`orderdetail` `o`
  JOIN `book` `b`
    ON (`o`.`BookId` = `b`.`BookId`))
  LEFT JOIN `image` `i`
    ON (`b`.`BookId` = `i`.`BookId`))
ORDER BY `o`.`CreatedDate` DESC;

DELIMITER $$

--
-- Create function `GenerateSlugFromEntityName`
--
CREATE FUNCTION GenerateSlugFromEntityName (EntityName varchar(255))
RETURNS varchar(255) CHARSET utf8
SQL SECURITY INVOKER
BEGIN
  DECLARE output varchar(255);

  -- Chuyển đổi tất cả các ký tự thành chữ thường
  SET output = LOWER(EntityName);
  -- Loại bỏ các ký tự đặc biệt
  SET output = REPLACE(output, '.', ' ');
  SET output = REPLACE(output, ',', ' ');
  SET output = REPLACE(output, ';', ' ');
  SET output = REPLACE(output, ':', ' ');
  SET output = REPLACE(output, '?', ' ');
  SET output = REPLACE(output, '%', ' ');
  SET output = REPLACE(output, '$', ' ');
  SET output = REPLACE(output, '&', ' ');
  SET output = REPLACE(output, '#', ' ');
  SET output = REPLACE(output, '*', ' ');
  SET output = REPLACE(output, '!', ' ');
  SET output = REPLACE(output, '_', ' ');
  SET output = REPLACE(output, '@', ' ');
  SET output = REPLACE(output, '+', ' ');
  SET output = REPLACE(output, '(', ' ');
  SET output = REPLACE(output, ')', ' ');
  SET output = REPLACE(output, '[', ' ');
  SET output = REPLACE(output, ']', ' ');
  SET output = REPLACE(output, '/', ' ');
  SET output = REPLACE(output, '-', ' ');
  SET output = REPLACE(output, '\'', '');
  SET output = REPLACE(output, '--', '-');

  -- Loại bỏ khoảng trắng ở đầu và cuối chuỗi
  SET output = TRIM(output);

  -- Thay thế các ký tự tiếng Anh có dấu thành không dấu
  -- Loại bỏ các ký tự có dấu và thay thế bằng các ký tự không dấu tương ứng
  SET output = REPLACE(output, 'á', 'a');
  SET output = REPLACE(output, 'à', 'a');
  SET output = REPLACE(output, 'ả', 'a');
  SET output = REPLACE(output, 'ã', 'a');
  SET output = REPLACE(output, 'ạ', 'a');
  SET output = REPLACE(output, 'ă', 'a');
  SET output = REPLACE(output, 'ắ', 'a');
  SET output = REPLACE(output, 'ằ', 'a');
  SET output = REPLACE(output, 'ẳ', 'a');
  SET output = REPLACE(output, 'ẵ', 'a');
  SET output = REPLACE(output, 'ặ', 'a');
  SET output = REPLACE(output, 'â', 'a');
  SET output = REPLACE(output, 'ấ', 'a');
  SET output = REPLACE(output, 'ầ', 'a');
  SET output = REPLACE(output, 'ẩ', 'a');
  SET output = REPLACE(output, 'ẫ', 'a');
  SET output = REPLACE(output, 'ậ', 'a');

  SET output = REPLACE(output, 'é', 'e');
  SET output = REPLACE(output, 'è', 'e');
  SET output = REPLACE(output, 'ẻ', 'e');
  SET output = REPLACE(output, 'ẽ', 'e');
  SET output = REPLACE(output, 'ẹ', 'e');
  SET output = REPLACE(output, 'ê', 'e');
  SET output = REPLACE(output, 'ế', 'e');
  SET output = REPLACE(output, 'ề', 'e');
  SET output = REPLACE(output, 'ể', 'e');
  SET output = REPLACE(output, 'ễ', 'e');
  SET output = REPLACE(output, 'ệ', 'e');

  SET output = REPLACE(output, 'í', 'i');
  SET output = REPLACE(output, 'ì', 'i');
  SET output = REPLACE(output, 'ỉ', 'i');
  SET output = REPLACE(output, 'ĩ', 'i');
  SET output = REPLACE(output, 'ị', 'i');

  SET output = REPLACE(output, 'ó', 'o');
  SET output = REPLACE(output, 'ò', 'o');
  SET output = REPLACE(output, 'ỏ', 'o');
  SET output = REPLACE(output, 'õ', 'o');
  SET output = REPLACE(output, 'ọ', 'o');
  SET output = REPLACE(output, 'ô', 'o');
  SET output = REPLACE(output, 'ố', 'o');
  SET output = REPLACE(output, 'ồ', 'o');
  SET output = REPLACE(output, 'ổ', 'o');
  SET output = REPLACE(output, 'ỗ', 'o');
  SET output = REPLACE(output, 'ộ', 'o');
  SET output = REPLACE(output, 'ơ', 'o');
  SET output = REPLACE(output, 'ớ', 'o');
  SET output = REPLACE(output, 'ờ', 'o');
  SET output = REPLACE(output, 'ở', 'o');
  SET output = REPLACE(output, 'ỡ', 'o');
  SET output = REPLACE(output, 'ợ', 'o');

  SET output = REPLACE(output, 'ú', 'u');
  SET output = REPLACE(output, 'ù', 'u');
  SET output = REPLACE(output, 'ủ', 'u');
  SET output = REPLACE(output, 'ũ', 'u');
  SET output = REPLACE(output, 'ụ', 'u');
  SET output = REPLACE(output, 'ư', 'u');
  SET output = REPLACE(output, 'ứ', 'u');
  SET output = REPLACE(output, 'ừ', 'u');
  SET output = REPLACE(output, 'ử', 'u');
  SET output = REPLACE(output, 'ữ', 'u');
  SET output = REPLACE(output, 'ự', 'u');

  SET output = REPLACE(output, 'ý', 'y');
  SET output = REPLACE(output, 'ỳ', 'y');
  SET output = REPLACE(output, 'ỷ', 'y');
  SET output = REPLACE(output, 'ỹ', 'y');
  SET output = REPLACE(output, 'ỵ', 'y');

  SET output = REPLACE(output, 'đ', 'd');

  -- Loại bỏ khoảng trắng và thay thế bằng dấu gạch ngang
  SET output = REPLACE(output, ' ', '-');
  SET output = REPLACE(output, '---', '-');
  SET output = REPLACE(output, '--', '-');
  RETURN output;
END
$$

--
-- Create procedure `Proc_Publisher_Update`
--
CREATE PROCEDURE Proc_Publisher_Update (IN PublisherId char(36), IN PublisherName varchar(100), IN PublisherCode varchar(50), IN Address varchar(255), IN PhoneNumber varchar(255), IN Description varchar(255), IN ModifiedBy varchar(100), IN PublisherSlug varchar(255))
SQL SECURITY INVOKER
BEGIN
  SET PublisherSlug = GenerateSlugFromEntityName(PublisherName);
  UPDATE publisher p
  SET p.PublisherName = PublisherName,
      p.PublisherSlug = PublisherSlug,
      p.Description = Description,
      p.ModifiedDate = CURRENT_TIMESTAMP(),
      p.ModifiedBy = ModifiedBy,
      p.PublisherCode = PublisherCode,
      p.PhoneNumber = PhoneNumber,
      p.Address = Address
  WHERE p.PublisherId = PublisherId;
END
$$

--
-- Create procedure `Proc_Publisher_Insert`
--
CREATE PROCEDURE Proc_Publisher_Insert (IN PublisherName varchar(100), IN PublisherCode varchar(50), IN PhoneNumber varchar(255), IN Description varchar(255), IN CreatedBy varchar(100), IN Address varchar(255), IN PublisherId char(36), IN PublisherSlug varchar(255))
SQL SECURITY INVOKER
BEGIN
  SET PublisherSlug = GenerateSlugFromEntityName(PublisherName);
  INSERT publisher (PublisherId, PublisherName, PublisherSlug, Description, CreatedDate, CreatedBy, PublisherCode, PhoneNumber, Address)
    VALUES (PublisherId, PublisherName, PublisherSlug, Description, CURRENT_TIMESTAMP(), CreatedBy, PublisherCode, PhoneNumber, Address);
END
$$

--
-- Create procedure `Proc_Category_Update`
--
CREATE PROCEDURE Proc_Category_Update (IN CategoryId char(36), IN CategoryName varchar(100), IN Description text, IN ModifiedBy varchar(100), IN ModifiedDate datetime, IN CategoryCode varchar(255), IN CategorySlug varchar(255))
SQL SECURITY INVOKER
COMMENT 'sửa thông tin danh mục'
BEGIN
  SET CategorySlug = GenerateSlugFromEntityName(CategoryName);
  UPDATE category c
  SET c.CategoryName = CategoryName,
      c.CategoryCode = CategoryCode,
      c.Description = Description,
      c.CategorySlug = CategorySlug,
      c.ModifiedDate = CURRENT_TIMESTAMP(),
      c.ModifiedBy = ModifiedBy
  WHERE c.CategoryId = CategoryId;
END
$$

--
-- Create procedure `Proc_Category_Insert`
--
CREATE PROCEDURE Proc_Category_Insert (IN CategoryId char(36), IN CategoryName varchar(100), IN Description text, IN CreatedDate datetime, IN CreatedBy varchar(100), IN CategoryCode varchar(255), IN CategorySlug varchar(255))
SQL SECURITY INVOKER
COMMENT 'proc thêm mới danh mục'
BEGIN
  SET CategorySlug = GenerateSlugFromEntityName(CategoryName);
  INSERT category (CategoryId, CategoryCode, CategoryName, CategorySlug, Description, CreatedDate, CreatedBy)
    VALUES (CategoryId, CategoryCode, CategoryName, CategorySlug, Description, CURRENT_TIMESTAMP(), CreatedBy);
END
$$

--
-- Create procedure `Proc_Book_Update`
--
CREATE PROCEDURE Proc_Book_Update (IN BookId char(36), IN BookCode varchar(255), IN BookName varchar(255), IN Description varchar(255), IN Price double, IN PublicationDate datetime, IN Size varchar(255), IN NumberOfPage int, IN Heavy double, IN Image varchar(255), IN CategoryId char(36), IN PublisherId varchar(36), IN Author varchar(255), IN ModifiedDate datetime, IN ModifiedBy varchar(100), IN QuantityImported int, IN QuantitySold int, IN QuantityInStock int, IN BookSlug varchar(255))
SQL SECURITY INVOKER
BEGIN
  SET BookSlug = GenerateSlugFromEntityName(BookName);
  UPDATE book b
  SET b.BookCode = BookCode,
      b.BookName = BookName,
      b.Description = Description,
      b.Price = Price,
      b.BookSlug = BookSlug,
      b.PublicationDate = PublicationDate,
      b.Size = Size,
      b.NumberOfPage = NumberOfPage,
      b.Heavy = Heavy,
      b.Image = Image,
      b.QuantityInStock = b.QuantityInStock + QuantityImported,
      b.CategoryId = CategoryId,
      b.PublisherId = PublisherId,
      b.QuantityInStock = QuantityInStock,
      b.QuantitySold = QuantitySold,
      b.ModifiedDate = CURRENT_TIMESTAMP(),
      b.ModifiedBy = ModifiedBy,
      b.Author = Author
  WHERE b.BookId = BookId;
END
$$

--
-- Create procedure `Proc_Book_Insert`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_Book_Insert (IN BookCode varchar(255), IN BookName varchar(255), IN Description varchar(255), IN Price double, IN PublicationDate date, IN Size varchar(255), IN NumberOfPage int, IN Heavy double, IN Image varchar(255), IN CategoryId char(36), IN PublisherId char(36), IN CreatedDate datetime, IN CreatedBy varchar(100), IN Author varchar(100), IN QuantityImported int, IN BookId char(36), IN QuantitySold int, IN BookSlug varchar(255))
BEGIN
  SET BookSlug = GenerateSlugFromEntityName(BookName);

  INSERT book (BookId, BookCode, BookSlug, BookName, QuantityInStock, QuantitySold, Description, Price, PublicationDate, Size, NumberOfPage, Heavy, Image, CategoryId, PublisherId, CreatedDate, CreatedBy, Author)
    VALUES (BookId, BookCode, BookSlug, BookName, QuantityImported, 0, Description, Price, PublicationDate, Size, NumberOfPage, Heavy, Image, CategoryId, PublisherId, CURRENT_TIMESTAMP(), CreatedBy, Author);
END
$$

--
-- Create procedure `Proc_User_Update`
--
CREATE PROCEDURE Proc_User_Update (IN UserId char(36), IN Fullname varchar(100), IN Address varchar(255), IN Gender int, IN Password varchar(50), IN Email varchar(255), IN PhoneNumber varchar(50), IN DateOfBirth date, IN QuantityAmountPurched double, IN RoleId char(36), IN RefreshToken varchar(255), IN RefreshTokenExpiryTime datetime, IN ModifiedDate datetime, IN ModifiedBy varchar(100))
SQL SECURITY INVOKER
BEGIN
  UPDATE user u
  SET u.Fullname = Fullname,
      u.Address = Address,
      u.Gender = Gender,
      u.Password = Password,
      u.Email = Email,
      u.PhoneNumber = PhoneNumber,
      u.DateOfBirth = DateOfBirth,
      u.QuantityAmountPurched = QuantityAmountPurched,
      u.RoleId = RoleId,
      u.RefreshToken = RefreshToken,
      u.RefreshTokenExpiryTime = RefreshTokenExpiryTime,
      u.ModifiedDate = CURRENT_TIMESTAMP(),
      u.ModifiedBy = ModifiedBy
  WHERE u.UserId = UserId;
END
$$

--
-- Create procedure `Proc_User_Insert`
--
CREATE PROCEDURE Proc_User_Insert (IN UserId char(36), IN Fullname varchar(100), IN Address varchar(255), IN Gender int, IN Password varchar(50), IN Email varchar(255), IN PhoneNumber varchar(50), IN DateOfBirth date, IN QuantityAmountPurched double, IN RoleId char(36), IN RefreshToken varchar(255), IN RefreshTokenExpiryTime datetime, IN CreatedDate datetime, IN CreatedBy varchar(100))
SQL SECURITY INVOKER
COMMENT 'Thêm mới người dùng'
BEGIN
  INSERT user (UserId, Fullname, Address, Gender, Password, Email, PhoneNumber, DateOfBirth, QuantityAmountPurched, RoleId, RefreshToken, RefreshTokenExpiryTime, CreatedDate, CreatedBy)
    VALUES (UserId, Fullname, Address, Gender, MD5(Password), Email, PhoneNumber, DateOfBirth, QuantityAmountPurched, RoleId, RefreshToken, RefreshTokenExpiryTime, CURRENT_TIME(), CreatedBy);
END
$$

--
-- Create procedure `Proc_User_CheckUserIsExist`
--
CREATE PROCEDURE Proc_User_CheckUserIsExist (IN Email varchar(255))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM user u
  WHERE u.Email = Email;
END
$$

--
-- Create procedure `Proc_Role_GetByRoleName`
--
CREATE PROCEDURE Proc_Role_GetByRoleName (IN RoleName varchar(100))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM role r
  WHERE r.RoleName = RoleName;
END
$$

DELIMITER ;

-- 
-- Dumping data for table role
--
INSERT INTO role VALUES
('553a2353-f358-11ee-a848-72f98ac74609', 'Admin'),
('f7d88041-f358-11ee-a848-72f98ac74609', 'User');

-- 
-- Dumping data for table publisher
--
INSERT INTO publisher VALUES
('174b8763-2707-7cb1-3c71-153b37881afe', 'Nhà Xuất Bản Nông Nghiệp', 'nha-xuat-ban-nong-nghiep', 'ylvvwrwlnvxdrfbctnmmdmpcqsqxtevixanagzxnbjfndphivkpmezwakbabeukt', '2007-01-05 10:08:02', 'Wesley Ramirez', '2024-04-13 17:56:54', 'Waltraud Lerma', 'NXB-2187', NULL, NULL),
('271a41be-5739-6088-3795-2c566fa88632', 'Nhà Xuất Bản Đại Học Quốc Gia Hà Nội', 'nha-xuat-ban-dai-hoc-quoc-gia-ha-noi', 'tkijd', '2007-05-23 07:16:45', 'Rueben Sell', '2024-04-13 17:57:17', 'Candice Houser', 'NXB-0222', NULL, NULL),
('2a3cacd6-1a30-6760-3769-9f77bda75690', 'Nhà Xuất Bản Lao Động', 'nha-xuat-ban-lao-dong', 'skqhkldyzdsvbajs', '1999-08-12 04:43:27', 'Almeta Bowling', '2024-04-13 17:57:28', 'Kourtney Flood', 'NXB-6828', NULL, NULL),
('2b5f15b9-17d9-57e8-1e4a-aea48a10ed18', 'Nhà Xuất Bản Trẻ', 'nha-xuat-ban-tre', 'lehetwdrcftgzrnskfuozinelrcwsdx', '2001-04-24 19:07:00', 'Edward Jarvis', '2024-04-13 17:56:56', 'Adolfo Parks', 'NXB-2808', NULL, NULL),
('3052c754-3516-667a-3980-3a2297d01534', 'Nhà Xuất Bản Thanh Niên', 'nha-xuat-ban-thanh-nien', 'pimgnagzfihuwjebjwvmfejzreepwjpnahmimhuffyvxreyrzmzczaakp', '1971-07-30 21:05:57', 'Porsha Minton', '2024-04-13 17:56:25', 'Buena Abreu', 'NXB-5687', NULL, NULL),
('34bd2cef-5026-567c-3b71-153b37881afe', 'Nhà Xuất Bản Tôn Giáo', 'nha-xuat-ban-ton-giao', 'kjuwlbgcxhpvenxjdwtufkhgyxhjfyteaibqwozaeinogzbnjqjcrczqkprqwmuaetqozizafxakhftfnwffknhxx', '1970-01-01 00:00:09', 'Adelaida Bergman', '2024-04-13 17:55:30', 'Alaine Hickey', 'NXB-5790', NULL, NULL),
('3c91bd67-6353-1edc-1f4a-aea48a10ed18', 'Nhà Xuất Bản Thế Giới', 'nha-xuat-ban-the-gioi', NULL, NULL, NULL, '2024-04-13 17:56:04', NULL, 'NXB-2379', NULL, NULL),
('438598e2-2574-4fc8-2626-978952f080e4', 'Nhà Xuất Bản Hội Nhà Văn', 'nha-xuat-ban-hoi-nha-van', 'igtoeuitoukuojndddyreccayajvycdhzlchtzxgrwkswxgyuolwdiahhlawowroepvhckhkwhpqqssagucl', '1970-01-01 00:00:01', 'Edgar Adler', '2024-04-13 17:55:40', 'Monroe Gatewood', 'NXB-5810', NULL, NULL),
('43a6bdf5-1b6b-451b-3695-2c566fa88632', 'Nhà Xuất Bản Lao Động Xã Hội', 'nha-xuat-ban-lao-dong-xa-hoi', 'nflfnqxivjyfwzuywimypupghxvxcoaadbpwfmtbpmcemnuetvxohikeuvxeemgbymvfrjywitetakaxjckxcgbwanwbmkexj', '1970-01-01 00:31:40', 'Abram Patten', '2024-04-13 17:56:22', 'Trey Christopher', 'NXB-9051', NULL, NULL),
('536f0d7b-6fd5-2bb9-52cb-b8d37b68af4d', 'Nhà Xuất Bản Kim Đồng', 'nha-xuat-ban-kim-dong', 'jtdkfcfcjpapqaeruyzpjtbrerrfibeiqilxqbgpuukyjnislgxklitqhijvzag', '1974-01-26 04:45:44', 'Leonora Houser', '2024-04-13 17:57:39', 'Minta Caruso', 'NXB-1661', NULL, NULL),
('64a59a25-2488-54b0-f6b4-c8af08a50cbf', 'Nhà Xuất Bản Tổng Hợp TP.HCM', 'nha-xuat-ban-tong-hop-tp-hcm', 'giilhfobeopfcowcanoebisfwhcdekoddmgsxgnovcqgkth', '1983-12-23 22:02:05', 'Scot Acker', '2024-04-13 17:57:00', 'Norris Calderon', 'NXB-5711', NULL, NULL),
('674934cc-42cf-20cf-1d4a-aea48a10ed18', 'Nhà Xuất Bản Hồng Đức', 'nha-xuat-ban-hong-duc', 'quuoxrozcoltfmvkxyyvxcf', '1970-01-01 00:00:07', 'Albert Mclean', '2024-04-13 17:55:33', 'Aileen Pitts', 'NXB-1234', NULL, NULL),
('6fcbca4a-7938-4339-51cb-b8d37b68af4d', 'Nhà Xuất Bản Văn Học', 'nha-xuat-ban-van-hoc', 'rlaljqrq', '1974-12-15 11:05:10', 'Karly Aguirre', '2024-04-13 17:57:52', 'Lyndsay Biggs', 'NXB-8954', NULL, NULL),
('7fc94edc-2827-7327-1f1e-21c6d80fbd76', 'Nhà Xuất Bản Chính Trị Quốc Gia Sự Thật', 'nha-xuat-ban-chinh-tri-quoc-gia-su-that', 'qvsrgqwddfysvjswlhufqyfokhokbeaebdkmoqxokxyglwqbtj', '1996-01-09 20:53:16', 'Dudley Rowan', '2024-04-13 17:57:03', 'Hailey Cardwell', 'NXB-8780', NULL, NULL);

-- 
-- Dumping data for table category
--
INSERT INTO category VALUES
('197fda97-5a35-781d-0e77-d9ebc53aac3d', 'kinh-doanh-va-tai-chinh', 'Kinh doanh và tài chính', NULL, NULL, NULL, '2024-04-13 17:37:28', 'Rodrick Paulsen', 'DM-2643'),
('1e5e96fa-5d7a-599d-27c2-579daad24557', 'thuc-pham-va-nau-an', 'Thực phẩm và nấu ăn', 'Nesciunt ea ut doloribus impedit aut optio et ipsa quasi eum esse animi ullam magni. Aut quia et omnis dignissimos sint repellendus sit perspiciatis consectetur veritatis voluptates vitae nesciunt aperiam; repudiandae magnam dolorem velit saepe quasi omnis ab dolor, qui aut deserunt autem sed error. Perspiciatis eius voluptatem voluptatum velit unde amet vitae facere vel sint et eum voluptatibus praesentium. Consequuntur odit natus perspiciatis culpa error non veritatis optio, eius qui sed sint odio nihil! Numquam quisquam reprehenderit mollitia quasi quia sit totam dolor est iure soluta voluptatem dolores mollitia? Sunt impedit libero perspiciatis atque ea cum odit et dolores sed qui error inventore ipsum. Aut suscipit dolor sit voluptas magni enim perspiciatis id eum beatae illo temporibus facilis error! Et nihil ut, atque possimus architecto ipsa exercitationem voluptas ex est recusandae explicabo error eaque. Aspernatur veritatis sed quam sed error perspiciatis sit accusantium illum voluptas explicabo error et amet! Nisi dolores saepe aut aliquid aut similique vitae id, sequi eos sit nisi reiciendis corporis.', '1978-03-21 09:51:50', 'Kim Desantis', '2024-04-13 17:37:21', 'Carline Mccall', 'DM-0530'),
('28cd1599-63bf-785f-4f80-7ed9d1ea06ea', 'tieu-thuyet', 'Tiểu thuyết', 'Voluptatem corrupti suscipit rem dolor sit fugiat omnis voluptas assumenda obcaecati eaque modi et dolorum; ratione quia qui, dignissimos modi perspiciatis non enim et reprehenderit earum reiciendis est architecto quo. Voluptate perspiciatis, consequatur sed non sit tempora qui quia et id quisquam et molestiae enim. Voluptatem perspiciatis, doloremque unde illo nulla explicabo optio culpa qui officia error sed dolorem expedita; perferendis culpa illum qui omnis quis nulla, quos non unde tempora deleniti necessitatibus porro obcaecati? Reiciendis odio quo commodi nobis voluptatem quaerat fuga corrupti maiores fugit qui suscipit nesciunt eos. Velit unde distinctio esse laudantium dolor sapiente harum error iste iure id sed alias ratione. Error esse sed dolorum iste iure nobis nemo vero ut commodi possimus ipsum repellat atque.', '1995-04-23 08:12:29', 'Lavonia Whiteside', '2024-04-13 17:37:15', 'Marco Horn', 'DM-7505'),
('3304dddb-1b72-607f-25c2-579daad24557', 'kinh-dien-van-hoc', 'Kinh điển văn học', 'Molestias voluptatem dolores error dolor molestias ut voluptatem et nemo ratione corporis voluptatem sed veniam. Rerum et nam voluptatum qui aut blanditiis et nostrum impedit velit ut animi iste necessitatibus! Dolorum cumque voluptas cumque velit voluptas qui quibusdam doloremque dolorem magni et corporis et consequuntur. Sit necessitatibus sapiente recusandae dolores ab error, ut voluptatum unde qui quod totam quos a. Omnis aut, aliquam eveniet dolores a unde aperiam architecto tempore qui sit voluptatibus nisi nostrum; consequuntur omnis accusantium et atque qui dolor vero dolore odit laboriosam neque autem at est. Fugiat earum molestiae accusamus non velit odit doloribus adipisci est maiores quidem magnam velit quo. Optio ipsum perspiciatis quam cum at quisquam, deserunt recusandae voluptates harum et quod quo odit? Inventore architecto, sed explicabo consectetur fugiat deleniti et sunt sed a deserunt ut provident aut. Voluptatem quo esse earum beatae dolore quia cum quo consequatur cumque, ducimus et dicta quas! Eius ipsum quas laboriosam eos deserunt suscipit omnis distinctio omnis est rerum perspiciatis deleniti dolorum. Sint hic molestiae obcaecati ut qui rerum dicta deserunt quia debitis ullam modi fugiat magnam. Aliquam nihil, iste odit unde laboriosam molestias voluptates quia nisi non tempora ut suscipit dolor! Beatae unde voluptatibus maxime labore quos error quaerat est odio iste in ad nulla laboriosam. Facere veritatis molestiae deserunt nesciunt assumenda aut molestias qui ex non, molestiae numquam sed et. Corporis aliquid possimus commodi veritatis nam quo sint omnis deleniti iste est eum tempore nulla. Vitae nisi ipsum veniam provident quo ducimus error beatae perspiciatis ipsum neque velit enim sed!\r\nCorrupti laborum velit illo natus aperiam tenetur autem nemo, incidunt neque obcaecati nam illo cum. Maxime voluptate tempora itaque iste omnis nam omnis sunt facere non cumque dolor alias sit. Quia alias consectetur ipsam quibusdam magnam natus quibusdam repellendus ut nesciunt consequuntur aut voluptas qui. A aut, placeat maxime dolor consectetur vero repudiandae error eaque quod sed ut unde blanditiis. Necessitatibus ut magnam tempore suscipit eligendi fuga nihil, consectetur sit doloremque totam tenetur voluptatem saepe. Modi omnis voluptatibus aut accusamus et excepturi eos distinctio et quia ut numquam reiciendis ea! Quae voluptatum molestiae ullam error, cupiditate delectus repellendus praesentium alias nihil id ut rerum in. Libero repellendus ad nihil sit iusto natus voluptatem autem ipsum placeat necessitatibus vero ut qui. Adipisci voluptatem quis maxime sapiente nulla temporibus et nihil officiis omnis ea sit quidem dolor; sed corrupti quia non ad incidunt tempore debitis nihil dolorem omnis blanditiis architecto reprehenderit omnis. Voluptatibus sunt cupiditate officiis nihil quia omnis id aut hic, aliquam inventore numquam dolor voluptatem! Vel et est dignissimos quam excepturi dolorem hic eligendi eius et sed voluptatibus voluptas deleniti.', '1984-08-12 16:51:30', 'Stevie Frizzell', '2024-04-13 17:37:25', 'Vanita Edmonds', 'DM-3847'),
('36ac2df8-2b1e-368f-cc1d-086412a8ea97', 'lich-su', 'Lịch sử', 'Eos ut consequatur maiores neque a accusantium ut qui perspiciatis accusamus omnis maxime quia vel. Repellat fuga unde et vel amet voluptatem aut pariatur dolore omnis consequuntur quae error dolores? Sit nostrum quibusdam molestiae odio velit voluptatibus veritatis ullam sit quas beatae et mollitia laudantium; cupiditate illo culpa cum quasi at voluptatibus enim similique eum amet sed natus nihil itaque. Vel ratione ad doloribus, iste unde dolorem quia et unde minus placeat maxime veritatis qui. Pariatur et consectetur omnis sit ea maiores libero nesciunt ut omnis quam dolore unde numquam! Corrupti repellendus incidunt et numquam omnis sed neque voluptatem, quia expedita consectetur tempore labore voluptates; quisquam enim, voluptatem et ipsam commodi perspiciatis eum repellendus rerum ut consequatur voluptatem qui officiis. Dolore voluptatem, fugiat optio natus aperiam sed unde nulla voluptas distinctio aut soluta et voluptas! Quis voluptatem, aut sunt quis non in ut nostrum iusto porro praesentium architecto aut veniam. Deserunt consequatur quis itaque rerum et quae aut quas tenetur, asperiores deleniti rerum labore non! Dolorem molestias ducimus excepturi ipsam ipsum ut in quia omnis, natus omnis autem aliquid dolore. Unde accusamus molestiae natus eveniet voluptatem sed, pariatur quibusdam adipisci ex natus culpa sed at. Molestiae sint facilis, nam et qui saepe quod sunt id et ipsum dolores maxime iste! Impedit sit harum, aut sit earum sunt optio sunt autem numquam error accusantium non qui. Accusantium error velit ea perspiciatis voluptatum expedita enim aut iusto saepe deleniti amet aliquam ratione! Sit quia alias dignissimos totam nulla consequatur veritatis qui neque id unde excepturi ut maiores. Animi sed quo nobis qui, enim amet blanditiis cum quo consequatur voluptatem omnis saepe ut...', '1997-09-23 04:04:36', 'Raul Palma', '2024-04-13 17:37:12', 'Cora Pacheco', 'DM-1865'),
('506acf1e-5331-67a9-0d77-d9ebc53aac3d', 'khoa-hoc-vien-tuong', 'Khoa học viễn tưởng', 'Placeat et ut dolorem placeat eum quas minus assumenda labore nobis nostrum qui quas quaerat. Eaque doloremque voluptatem quidem recusandae tempore non quia nobis esse laboriosam praesentium ut unde et! Quod rem quia expedita iusto ex officiis a ut neque omnis eius molestias non modi. Sed aut voluptatem delectus aliquid ipsum voluptatem nihil amet ducimus autem non ut laborum iste; est itaque sit perspiciatis error ipsum qui voluptate numquam aut recusandae amet, nostrum perspiciatis voluptate. Ratione inventore voluptatum explicabo reiciendis quisquam facilis sunt accusamus doloremque sit, ipsum omnis quis a. Expedita sapiente dolores libero repellat fugiat esse quia eius optio sit cupiditate earum omnis iste. Inventore natus aliquam est dolorum odit sapiente, et omnis illo sed illum quasi tenetur voluptates; tempora minima, fugit et non eum quos soluta sit debitis incidunt sit dolorum quis unde.\r\nHarum aliquam soluta impedit sit repellendus in sed distinctio quod ut saepe in rerum non. Aut ut quia est maxime asperiores aut perferendis ut voluptatum totam qui neque quaerat expedita. Incidunt nihil sapiente accusamus natus illo vitae unde possimus aut repudiandae sit quo omnis voluptatem. Id ab repellat tempora, ut nostrum porro dignissimos aliquam pariatur et id neque velit et. Perspiciatis non, quas et quia et voluptas est quibusdam exercitationem dolorum vel maiores dolores veritatis. Quaerat aut unde perspiciatis sunt ducimus sit natus dolorem architecto, ut a enim at dolor!', '2017-04-30 21:25:36', 'Jackeline Acker', '2024-04-13 17:37:09', 'Cary Benitez', 'DM-5027'),
('57cdf8c4-47e3-5560-7e41-c1ec321fe728', 'huyen-bi-va-kinh-di', 'Huyền bí và kinh dị', NULL, NULL, NULL, '2024-04-13 17:37:31', 'Kennith Carswell', 'DM-4560'),
('5fab4ff7-1b8e-64d0-1880-de64d090a2c2', 'phieu-luu', 'Phiêu lưu', 'Quia voluptates minus sed iste voluptatem enim ut aut eum eos qui totam et voluptatem.\r\nUt reprehenderit, a reiciendis tempora saepe ipsa deserunt natus laudantium eos quia omnis voluptatem enim. Totam libero magnam a perferendis saepe veritatis et fugiat alias veritatis rem unde autem omnis. Et nisi sequi nemo omnis quae magnam rem quis aliquam deserunt incidunt commodi tempore velit. Adipisci iste illo et ipsam et non et amet est ut eum quo ducimus odio. Earum praesentium animi et aut molestias, voluptate sed ipsum voluptatibus sit omnis sed culpa corrupti. Quaerat debitis voluptatem totam et modi repudiandae nam ut natus illum commodi qui quasi non. Quam vero odit excepturi, facere enim consequuntur sunt quidem dolore illum qui ut sit eaque.', '1994-10-12 11:22:05', 'Kendrick Naranjo', '2024-04-13 17:37:18', 'Tanner Butler', 'DM-5072'),
('6c80a684-1cb5-41af-ff34-60b3ebf808a9', 'ton-giao-va-tam-linh', 'Tôn giáo và tâm linh', 'Accusamus veritatis minus aut iure nemo eius unde nemo reprehenderit sed dolores omnis et consequatur. Ut unde et odit id nam qui hic ex aliquam omnis, ex aperiam error voluptatem. Excepturi adipisci dolores unde magni cupiditate nulla non voluptatem sapiente enim perferendis ipsum sed culpa. Ab iste sit sunt nulla autem sint quia modi, odit natus assumenda voluptatem hic tempore. Accusantium nobis sint eos earum animi ullam ut non perspiciatis dolore quia repudiandae ut molestias.', '1970-01-01 01:19:23', 'Twila Bock', '2024-04-13 17:37:52', 'Kathyrn Beatty', 'DM-5663'),
('eb163ef0-f96f-11ee-b2e3-907fc975ee4b', 'nuoi-day-con', 'Nuôi dạy con', NULL, '2024-04-13 15:29:11', NULL, '2024-04-13 17:37:48', NULL, 'DM-7506');

-- 
-- Dumping data for table `order`
--
INSERT INTO `order` VALUES
('8074c71f-2b8d-4399-a76e-2eac418a9888', '771312129', '99f7895a-08e4-4b3b-b5d8-0294845f570c', 'Lê Thanh Hải', '0974993745', 359000, '4', 'Số nhà 771, Xã Đan Phượng, Huyện Đan Phượng, Thành phố Hà Nội', NULL, '2024-04-13 22:04:25', NULL, '2024-04-13 22:44:08', '2024-04-13 22:04:25', 'Lê Thanh Hải', '2024-04-13 22:44:08', NULL),
('8504b2c4-918d-4cad-8f24-8ebbb5295ba1', '351996186', '99f7895a-08e4-4b3b-b5d8-0294845f570c', 'Lê Huy', '0974907964', 169000, '4', 'Số nhà 112, Xã Thọ Xuân, Huyện Đan Phượng, Thành phố Hà Nội', NULL, '2024-04-13 22:06:19', NULL, '2024-04-13 22:43:02', '2024-04-13 22:06:19', 'Lê Huy', '2024-04-13 22:43:02', NULL),
('b83da875-3669-44a6-b9e4-db31c56a83e1', '954614007', '99f7895a-08e4-4b3b-b5d8-0294845f570c', 'Lê Thanh Hải', '0974993745', 398000, '0', 'Số nhà 771, Xã Đan Phượng, Huyện Đan Phượng, Thành phố Hà Nội', NULL, '2024-04-13 22:03:41', NULL, NULL, '2024-04-13 22:03:41', 'Lê Thanh Hải', NULL, NULL),
('ea6fe5ba-30f0-4cc0-a856-af3aacdaa1f6', '167153089', '99f7895a-08e4-4b3b-b5d8-0294845f570c', 'Lê Huy', '0974907964', 169000, '0', 'Số nhà 112, Xã Thọ Xuân, Huyện Đan Phượng, Thành phố Hà Nội', NULL, '2024-04-14 00:49:07', NULL, NULL, '2024-04-14 00:49:07', 'Lê Huy', NULL, NULL);

-- 
-- Dumping data for table user
--
INSERT INTO user VALUES
('415d355b-a0ab-4e7a-94de-6aaf08408ef1', 'Lê Quang Huy', NULL, NULL, 'e10adc3949ba59abbe56e057f20f883e', 'admin@gmail.com', NULL, NULL, NULL, '553a2353-f358-11ee-a848-72f98ac74609', NULL, NULL, '2024-04-06 20:29:15', NULL, '2024-04-11 22:09:55', NULL),
('4fd0cf94-9564-4641-a74e-8596af039f32', 'Trần Tiến', NULL, NULL, 'e10adc3949ba59abbe56e057f20f883e', 'trantien@gmail.com', NULL, NULL, NULL, 'f7d88041-f358-11ee-a848-72f98ac74609', '0A/kQY8k+Oxmd7ykKmzyrxaYLipFMk/SoydoZ4XOUI0E8oYac488xJW2UVR5EPTqm3qrdxC62WoS6uZbE2OywA==', '2024-04-18 22:16:30', '2024-04-11 22:16:15', NULL, '2024-04-11 22:16:30', NULL),
('966cb424-6840-4645-af92-c5b9f5f577c3', 'Lê Hải', NULL, NULL, 'e10adc3949ba59abbe56e057f20f883e', 'lehai@gmail.com', NULL, NULL, NULL, 'f7d88041-f358-11ee-a848-72f98ac74609', 'nMdfVGZ/NcF9IruenbiwkI91hgXGGV9hupqOxkBYc2wP+QrTIeK8ltchvuSXDXw8jakVOJwj9iB3GFVK5akiyg==', '2024-04-18 22:24:10', '2024-04-11 21:56:18', NULL, '2024-04-11 22:24:10', NULL),
('99f7895a-08e4-4b3b-b5d8-0294845f570c', 'Lê Quang Huy', NULL, NULL, 'e10adc3949ba59abbe56e057f20f883e', 'leqghuy@gmail.com', '0974907964', NULL, NULL, 'f7d88041-f358-11ee-a848-72f98ac74609', 'LfMflHfDvZVqpxWA/uy1S+yhlidx0ppRn4F4XTDYd0UQmq+NWCIRoH8z1lgrDnOjfp0Uxjv8g8gP0cIrLXZmQg==', '2024-04-21 00:31:19', '2024-04-10 23:54:33', NULL, '2024-04-14 00:31:19', NULL);

-- 
-- Dumping data for table cart
--
INSERT INTO cart VALUES
('139b823b-f75b-11ee-a848-72f98ac74609', '99f7895a-08e4-4b3b-b5d8-0294845f570c', '2024-04-10 23:54:33', 'Lê Quang Huy', NULL, NULL),
('8428cce9-f816-11ee-a848-72f98ac74609', '4fd0cf94-9564-4641-a74e-8596af039f32', '2024-04-11 22:16:15', 'Trần Tiến', NULL, NULL),
('bb10f307-f813-11ee-a848-72f98ac74609', '966cb424-6840-4645-af92-c5b9f5f577c3', '2024-04-11 21:56:18', 'Lê Hải', NULL, NULL);

-- 
-- Dumping data for table book
--
INSERT INTO book VALUES
('19b507d6-512e-481c-9667-503949c598f8', 'MS-1014', 'Lớp Học Mật Ngữ Phiên Bản Mới - Tập 7', NULL, 25000, NULL, NULL, 52, NULL, NULL, '5fab4ff7-1b8e-64d0-1880-de64d090a2c2', '674934cc-42cf-20cf-1d4a-aea48a10ed18', '2024-04-13 15:35:09', NULL, '2024-04-14 00:49:07', NULL, 'B R O Group', 32, 8, NULL, 'lop-hoc-mat-ngu-phien-ban-moi-tap-7'),
('404c2c49-12e4-4dd3-a1f2-82378c00a443', 'MS-1011', 'Tìm lại kỉ niệm', NULL, 103000, '2024-04-02', '20x10x3.2', 378, 1200, NULL, '28cd1599-63bf-785f-4f80-7ed9d1ea06ea', '2b5f15b9-17d9-57e8-1e4a-aea48a10ed18', '2024-04-09 18:57:18', NULL, '2024-04-13 22:04:25', NULL, 'Trần Quang Sáng', 9, 8, NULL, 'tim-lai-ki-niem'),
('5d7ca9c2-1661-498f-91d9-4f0865ab1611', 'MS-1013', 'Tuổi Thơ Dữ Dội - Tập 1 (Tái Bản 2019)', NULL, 80000, NULL, NULL, 40000, NULL, NULL, '3304dddb-1b72-607f-25c2-579daad24557', '536f0d7b-6fd5-2bb9-52cb-b8d37b68af4d', '2024-04-13 15:32:06', NULL, '2024-04-13 22:03:41', NULL, 'Phùng Quán', 35, 5, NULL, 'tuoi-tho-du-doi-tap-1-tai-ban-2019'),
('8dde05bd-0d21-4ee0-a763-002abfa305f8', 'MS-1010', 'asd', NULL, 10000, '2024-04-02', '2.3 x 3.3 x 4.4', 145, 900, NULL, '36ac2df8-2b1e-368f-cc1d-086412a8ea97', '7fc94edc-2827-7327-1f1e-21c6d80fbd76', '2024-04-05 15:00:37', NULL, '2024-04-13 17:16:20', NULL, 'sasd', 179, 2, NULL, 'asd'),
('9131d615-bbb5-49d5-8912-689a6df8c1b5', 'MS-1012', 'ontessori - Phương Pháp Giáo Dục Toàn Diện Cho Trẻ 0-6 Tuổi', NULL, 119000, NULL, NULL, 240, NULL, NULL, 'eb163ef0-f96f-11ee-b2e3-907fc975ee4b', '3c91bd67-6353-1edc-1f4a-aea48a10ed18', '2024-04-13 15:30:08', NULL, '2024-04-14 00:49:07', NULL, 'Ito Mika', 16, 4, NULL, 'ontessori-phuong-phap-giao-duc-toan-dien-cho-tre-0-6-tuoi');

-- 
-- Dumping data for table orderdetail
--
INSERT INTO orderdetail VALUES
('06b76104-f9a7-11ee-b2e3-907fc975ee4b', '5d7ca9c2-1661-498f-91d9-4f0865ab1611', 'b83da875-3669-44a6-b9e4-db31c56a83e1', 80000, 2, NULL, NULL, '2024-04-13 22:03:41', NULL),
('06bd2f11-f9a7-11ee-b2e3-907fc975ee4b', '9131d615-bbb5-49d5-8912-689a6df8c1b5', 'b83da875-3669-44a6-b9e4-db31c56a83e1', 119000, 2, NULL, NULL, '2024-04-13 22:03:41', NULL),
('21371eea-f9a7-11ee-b2e3-907fc975ee4b', '19b507d6-512e-481c-9667-503949c598f8', '8074c71f-2b8d-4399-a76e-2eac418a9888', 25000, 2, NULL, NULL, '2024-04-13 22:04:25', NULL),
('21381f6c-f9a7-11ee-b2e3-907fc975ee4b', '404c2c49-12e4-4dd3-a1f2-82378c00a443', '8074c71f-2b8d-4399-a76e-2eac418a9888', 103000, 3, NULL, NULL, '2024-04-13 22:04:25', NULL),
('23448ae1-f9be-11ee-b2e3-907fc975ee4b', '9131d615-bbb5-49d5-8912-689a6df8c1b5', 'ea6fe5ba-30f0-4cc0-a856-af3aacdaa1f6', 119000, 1, NULL, NULL, '2024-04-14 00:49:07', NULL),
('234b42cd-f9be-11ee-b2e3-907fc975ee4b', '19b507d6-512e-481c-9667-503949c598f8', 'ea6fe5ba-30f0-4cc0-a856-af3aacdaa1f6', 25000, 2, NULL, NULL, '2024-04-14 00:49:07', NULL),
('65321466-f9a7-11ee-b2e3-907fc975ee4b', '19b507d6-512e-481c-9667-503949c598f8', '8504b2c4-918d-4cad-8f24-8ebbb5295ba1', 25000, 2, NULL, NULL, '2024-04-13 22:06:19', NULL),
('6532a694-f9a7-11ee-b2e3-907fc975ee4b', '9131d615-bbb5-49d5-8912-689a6df8c1b5', '8504b2c4-918d-4cad-8f24-8ebbb5295ba1', 119000, 1, NULL, NULL, '2024-04-13 22:06:19', NULL);

-- 
-- Dumping data for table image
--
INSERT INTO image VALUES
('0cebec29-f960-11ee-b2e3-907fc975ee4b', '/images/275.jpg', '2024-04-13 13:35:36', NULL, NULL, '49bdff69-f209-499f-810a-4278cc92604e', NULL, NULL, NULL),
('0d55a142-f970-11ee-b2e3-907fc975ee4b', '/images/montessori---phuong-phap-gd-toan-dien-cho-tre-0-_-6-t----b_a-1.jpg', '2024-04-13 15:30:08', NULL, '9131d615-bbb5-49d5-8912-689a6df8c1b5', NULL, NULL, NULL, NULL),
('0e4baf62-f961-11ee-b2e3-907fc975ee4b', '/images/anh-mau.jpg', '2024-04-13 13:42:48', NULL, NULL, 'eb7e2085-8493-46e3-a4b5-0b7ad6bcc216', 'LQHUY', '2024-04-13 13:43:20', NULL),
('1c209945-f8f2-11ee-b2e3-907fc975ee4b', '/images/275.jpg', '2024-04-13 00:28:43', NULL, '0f19b52b-bdee-4f42-a58a-0b9e42c32b15', NULL, 'LQHUY', '2024-04-13 00:37:37', NULL),
('5355cd4e-f970-11ee-b2e3-907fc975ee4b', '/images/image_187162.jpg', '2024-04-13 15:32:06', NULL, '5d7ca9c2-1661-498f-91d9-4f0865ab1611', NULL, NULL, NULL, NULL),
('61ca7b0d-f668-11ee-a848-72f98ac74609', '/images/103-1.png', '2024-04-09 18:57:18', NULL, '404c2c49-12e4-4dd3-a1f2-82378c00a443', NULL, 'LQHUY', '2024-04-09 18:58:36', NULL),
('964c9521-f322-11ee-a848-72f98ac74609', '/images/anh-mau.jpg', '2024-04-05 15:00:37', NULL, '8dde05bd-0d21-4ee0-a763-002abfa305f8', NULL, 'LQHUY', '2024-04-05 19:04:56', NULL),
('a8b3fd29-f967-11ee-b2e3-907fc975ee4b', '/images/103-1.png', '2024-04-13 14:30:04', NULL, NULL, '6cd89f7a-bc72-4dbc-8304-cb82f0aa611a', 'LQHUY', '2024-04-13 14:30:12', NULL),
('c0608abb-f967-11ee-b2e3-907fc975ee4b', '/images/anh-mau.jpg', '2024-04-13 14:30:43', NULL, NULL, '80a874a1-5ae0-42a7-a1be-bbf9ea69d650', NULL, NULL, NULL),
('c0b0c86b-f970-11ee-b2e3-907fc975ee4b', '/images/lhmn-phienbanmoi-tap7-5595.jpg', '2024-04-13 15:35:09', NULL, '19b507d6-512e-481c-9667-503949c598f8', NULL, 'LQHUY', '2024-04-13 15:35:22', NULL),
('e8744b9d-f95a-11ee-b2e3-907fc975ee4b', '/images/275.jpg', '2024-04-13 12:58:47', NULL, NULL, 'b761ea10-c0c7-4740-81d6-eb6cf537540c', NULL, NULL, NULL),
('e875f02c-f95a-11ee-b2e3-907fc975ee4b', '/images/275.jpg', '2024-04-13 12:58:47', NULL, NULL, '5cb6f946-6fce-4c22-974f-ea8bddef579b', NULL, NULL, NULL),
('f11327b5-f95a-11ee-b2e3-907fc975ee4b', '/images/275.jpg', '2024-04-13 12:59:02', NULL, NULL, '1237e232-a9f3-446b-b9d8-d8fc3ec58f31', NULL, NULL, NULL),
('f6d3c759-f8f1-11ee-b2e3-907fc975ee4b', '/images/anh-mau.jpg', '2024-04-13 00:27:40', NULL, '3c5ebd93-03e2-4b7a-b6df-908dc6e022ca', NULL, NULL, NULL, NULL);

-- 
-- Dumping data for table deliveryaddress
--
INSERT INTO deliveryaddress VALUES
('ccc94242-7820-4b35-b861-998d2de62b12', '99f7895a-08e4-4b3b-b5d8-0294845f570c', 'Thành phố Hà Nội', 'Huyện Đan Phượng', 'Xã Thọ Xuân', 'Số nhà 112', 'Số nhà 112, Xã Thọ Xuân, Huyện Đan Phượng, Thành phố Hà Nội', 1, 'Lê Huy', '0974907964', '2024-04-11 00:06:46', NULL, NULL, NULL),
('e158ea26-099f-44f8-bdda-d1977748c6e7', '99f7895a-08e4-4b3b-b5d8-0294845f570c', 'Thành phố Hà Nội', 'Huyện Đan Phượng', 'Xã Đan Phượng', 'Số nhà 771', 'Số nhà 771, Xã Đan Phượng, Huyện Đan Phượng, Thành phố Hà Nội', 0, 'Lê Thanh Hải', '0974993745', '2024-04-13 20:17:22', NULL, NULL, NULL);

-- 
-- Dumping data for table cartitem
--
INSERT INTO cartitem VALUES
('7ec508a4-ede9-415a-89a7-bce44dfa4d41', '139b823b-f75b-11ee-a848-72f98ac74609', '19b507d6-512e-481c-9667-503949c598f8', 2, 25000, 50000, '2024-04-14 00:52:10', NULL, NULL, NULL),
('d4659132-f8df-11ee-b2e3-907fc975ee4b', '139b823b-f75b-11ee-a848-72f98ac74609', '8dde05bd-0d21-4ee0-a763-002abfa305f8', 2, 10000, 20000, '2024-04-12 22:17:51', NULL, '2024-04-13 20:40:27', NULL),
('e493061e-2731-4f6d-8ac7-c9c62fe23fa3', '139b823b-f75b-11ee-a848-72f98ac74609', '9131d615-bbb5-49d5-8912-689a6df8c1b5', 1, 119000, 119000, '2024-04-14 00:52:10', NULL, NULL, NULL);

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;